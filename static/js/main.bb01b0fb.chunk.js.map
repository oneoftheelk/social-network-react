{"version":3,"sources":["Components/Navbar/Friends/Friends.module.css","Assets/Images/preloader.gif","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfilePage.module.css","Components/Users/Users.module.css","utils/validators/validator.js","Components/Navbar/Friends/Friends.jsx","Components/Navbar/Nav.jsx","redux/navbarReducer.js","Components/Navbar/NavContainer.jsx","api/api.js","redux/usersReducer.js","Components/Users/Users.jsx","Components/common/Preloader/Preloader.jsx","Components/Users/UsersContainer.jsx","redux/messageReducer.js","Components/Dialogs/DialogsItem/DialogsItem.jsx","Components/Dialogs/MessagesItem/MessagesItem.jsx","Components/Dialogs/DialogsPage.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsPageContainer.jsx","redux/profileReducer.js","Components/Profile/MyPosts/Post/Post.jsx","Components/common/FormsControls/FormsControls.js","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/ProfilePage.jsx","Components/Profile/ProfilePageContainer.jsx","Components/Header/Header.jsx","redux/authReducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js","Assets/Images/avatar.png","Components/Navbar/Nav.module.css","Components/Dialogs/DialogsPage.module.css","Components/Dialogs/MessagesItem/MessagesItem.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/common/FormsControls/FormsControls.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Header/Header.module.css","Components/Login/Login.module.css"],"names":["module","exports","friendsItem","__webpack_require__","p","avatarSmall","background","container","userPhoto","userPages","item","selectedPage","maxLength","Friends","props","react_default","a","createElement","className","style","src","avatar","alt","name","Nav","friendsElement","friends","map","Navbar_Friends_Friends","key","id","linksElement","links","link","linkTo","friendsNav","react_router_dom","to","onClick","changeLink","activeClassName","activeLink","active","concat","slice","toUpperCase","newActiveLink","nav","initialState","navbarReducer","state","arguments","length","undefined","action","type","Object","objectSpread","NavContainer","connect","navbar","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","currentPage","pageSize","get","then","response","data","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","users","totalUsersCount","isFetching","followingInProgress","setIsFetching","toggleFollowingProgress","userId","usersReducer","user","followed","totalCount","toConsumableArray","filter","Users","pagesCount","Math","ceil","pages","i","push","styles","page","onPageChange","photos","small","disabled","some","removeUserFromFriends","addUserToFriends","Preloader","preloader","width","UsersContainer","pageNumber","_this","setCurrentPage","getUsers","this","Fragment","Preloader_Preloader","Components_Users_Users","assign","React","Component","compose","usersPage","dispatch","items","resultCode","addToFriends","removeFromFriends","messages","message","from","dialogs","messageReducer","newMessage","executor","DialogsItem","path","MessagesItem","classNameValue","MyMessage","FriendsMessage","DialogsPage","dialogsPage","dialogsElement","Dialogs_DialogsItem_DialogsItem","messagesElement","Dialogs_MessagesItem_MessagesItem","addMessage","dialogsItem","dialogsMessage","mapStateToProps","isAuthorized","auth","withAuthRedirect","RedirectComponent","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","react_router","addMessageActionCreator","posts","likeCount","profile","setStatus","profileReducer","newPost","newPostText","Post","required","FormControl","_ref","input","meta","objectWithoutProperties","hasError","error","touched","classForError","formControl","children","Textarea","restProps","child","FormsControls_FormControl","Input","maxLength10","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","addPost","caption","Field","component","placeholder","validate","MyPosts","PostsElements","MyPosts_Post_Post","values","MyPostsContainer","profilePage","addPostActionCreator","ProfileStatus","_getPrototypeOf2","_len","args","Array","_key","call","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","event","currentTarget","prevProps","onChange","onBlur","autoFocus","onDoubleClick","ProfileInfo","profileInfo","fullName","ProfileStatus_ProfileStatus","ProfilePage","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","match","params","userID","setChosenUserProfile","Profile_ProfilePage","withRouter","Header","header","loginBlock","logout","login","setAuthUserData","payload","authorizeMe","_response$data$data","authReducer","HeaderContainer","Components_Header_Header","LoginReduxForm","formData","App","Header_HeaderContainer","Navbar_NavContainer","render","ProfilePageContainer","DialogsPageContainer","Users_UsersContainer","Components_Login_Login","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb01b0fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItem\":\"Friends_friendsItem__1Bktu\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.c368e429.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarSmall\":\"Post_avatarSmall__3Ecgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ProfilePage_background__3OfdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2R8sx\",\"userPhoto\":\"Users_userPhoto__3UYp_\",\"userPages\":\"Users_userPages__3_ULw\",\"item\":\"Users_item__3XGp_\",\"selectedPage\":\"Users_selectedPage__iLi0i\"};","export const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    }\r\n    return undefined;\r\n}","import React from 'react';\r\nimport style from './Friends.module.css';\r\nimport avatar from './../../../Assets/Images/avatar.png';\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div className={style.friendsItem}>\r\n            <img src={avatar} alt=\"friends\" />\r\n            <div>{props.name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport Friends from './Friends/Friends';\r\nimport style from './Nav.module.css';\r\n\r\nconst Nav = (props) => {\r\n    let friendsElement = props.friends.map( item => {\r\n        return <Friends key={item.id} id={item.id} name={item.name} />\r\n    });\r\n\r\n    let linksElement = props.links.map( link => {\r\n        return <div className={link.linkTo === \"/friends\" && style.friendsNav}>\r\n            <NavLink to={link.linkTo}\r\n                onClick={() => changeLink(link.id)}\r\n                activeClassName=\"active\"\r\n                className={link.id === props.activeLink && style.active}>\r\n                {`${link.linkTo.slice(1, 2).toUpperCase()}${link.linkTo.slice(2)}`}\r\n            </NavLink>\r\n        </div>\r\n    });\r\n\r\n    const changeLink = (newActiveLink) => {\r\n        props.changeLink(newActiveLink);\r\n    }\r\n\r\n    return (\r\n        <nav className={style.nav}>\r\n            {linksElement}\r\n            <div className={style.friends}>\r\n                {friendsElement}\r\n            </div>        \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","const CHANGE_LINK = \"CHANGE_LINK\";\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Dmitry\"},\r\n        {id: 2, name: \"Jane\"},\r\n        {id: 3, name: \"Mary\"},\r\n        {id: 4, name: \"Ian\"},\r\n        {id: 5, name: \"Alice\"}\r\n    ],\r\n    links: [\r\n        {id: 1, linkTo: \"/profile\"},\r\n        {id: 2, linkTo: \"/dialogs\"},\r\n        {id: 3, linkTo: \"/users\"},\r\n        {id: 4, linkTo: \"/news\"},\r\n        {id: 5, linkTo: \"/music\"},\r\n        {id: 6, linkTo: \"/settings\"},\r\n        {id: 7, linkTo: \"/friends\"}\r\n    ],\r\n    activeLink: 1\r\n};\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LINK: {\r\n            return {...state, activeLink: action.newActiveLink};\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const changeLink = (newActiveLink) => ({type: CHANGE_LINK, newActiveLink});\r\n\r\nexport default navbarReducer;","import Nav from './Nav';\r\nimport { connect } from 'react-redux';\r\nimport { changeLink } from './../../redux/navbarReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.navbar.friends,\r\n        links: state.navbar.links,\r\n        activeLink: state.navbar.activeLink\r\n    }\r\n}\r\n\r\nconst NavContainer = connect(mapStateToProps, {changeLink}) (Nav);\r\n\r\nexport default NavContainer;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"978dea68-3e9b-4548-8e9a-4417d27d7337\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        ).then(response => response.data);\r\n    },\r\n    addToFriends(id) {\r\n        return (\r\n            instance.post(`follow/${id}`)\r\n        ).then(response => response.data);\r\n    },\r\n    removeFromFriends(id) {\r\n        return (\r\n            instance.delete(`follow/${id}`)\r\n        ).then(response => response.data);\r\n    },\r\n    getProfile(id) {\r\n        console.warn('Outdated method! Please use profileAPI object.');\r\n        return profileAPI.getProfile(id);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return (\r\n            instance.get(`profile/${id}`)\r\n        ).then(response => response.data);\r\n    },\r\n    getStatus(id) {\r\n        return (\r\n            instance.get(`profile/status/${id}`)\r\n        )\r\n    },\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put(`profile/status`, {status})\r\n        ).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authorizeMe() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n        )\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return (\r\n            instance.post(`auth/login`, { email, password, rememberMe })\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        )\r\n    }\r\n}","import { usersAPI } from '../api/api';\r\n\r\nconst ADD_TO_FRIENDS = 'ADD_TO_FRIENDS';\r\nconst REMOVE_FROM_FRIENDS = 'REMOVE_FROM_FRIENDS';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case ADD_TO_FRIENDS: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => user.id === action.userId ? {...user, followed: true} : user )\r\n            };\r\n        }\r\n        case REMOVE_FROM_FRIENDS: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => user.id === action.userId ? {...user, followed: false} : user )\r\n            };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case SET_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addToFriends = (userId) => ({type: ADD_TO_FRIENDS, userId});\r\nexport const removeFromFriends = (userId) => ({type: REMOVE_FROM_FRIENDS, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const setIsFetching = (isFetching) => ({type: SET_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const getUsers = (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    usersAPI.getUsers(currentPage, pageSize)\r\n        .then(data => {\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n};\r\n\r\nexport const addUserToFriends = (userId) => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.addToFriends(userId)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(addToFriends(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n}\r\n\r\nexport const removeUserFromFriends = (userId) => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.removeFromFriends(userId)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(removeFromFriends(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport avatar from './../../Assets/Images/avatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.userPages}>\r\n                {pages.map(page => {\r\n                    return <span\r\n                        onClick={() => props.onPageChange(page)}\r\n                        className={props.currentPage === page ? styles.selectedPage : \"\"}>{page} </span>\r\n                })}\r\n            </div>\r\n            {props.users.map(user =>\r\n                <div key={user.id} className={styles.container}>\r\n                    <div className={styles.item}>\r\n                        <NavLink to={`/profile/${user.id}`}>\r\n                            <img src={user.photos.small || avatar} className={styles.userPhoto} alt=\"userPhoto\" />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={styles.item}>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </div>\r\n                    <div className={styles.item}>\r\n                        <div>{\"country, city\"}</div>\r\n                    </div>\r\n                    <div className={styles.item}>\r\n                        {!user.followed\r\n                            ? <button\r\n                                disabled={props.followingInProgress.some( id => id === user.id )}\r\n                                onClick={() => { props.addUserToFriends(user.id) }}>Add</button>\r\n                            : <button \r\n                                disabled={props.followingInProgress.some( id => id === user.id )}\r\n                                onClick={() => { props.removeUserFromFriends(user.id) }}>Remove</button>}\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from '../../../Assets/Images/preloader.gif';\r\n\r\nexport let Preloader = (props) => {\r\n    return <img src={preloader} alt=\"\" width=\"100\" />\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { setCurrentPage, toggleFollowingProgress,\r\n    getUsers, addUserToFriends, removeUserFromFriends } from './../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport { Preloader } from '../common/Preloader/Preloader';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <> \r\n            {this.props.isFetching\r\n                ? <Preloader />\r\n                : <Users {...this.props} onPageChange={this.onPageChange} /> }\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setCurrentPage, toggleFollowingProgress,\r\n        getUsers, addUserToFriends, removeUserFromFriends\r\n    })\r\n)(UsersContainer)","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    messages: [\r\n        { id: 1, message: \"message1\", from: \"me\" },\r\n        { id: 2, message: \"message2\", from: \"friend\" },\r\n        { id: 3, message: \"message3\", from: \"me\" }\r\n    ],\r\n    dialogs: [\r\n        { id: 1, name: \"Dmitry\" },\r\n        { id: 2, name: \"Jane\" },\r\n        { id: 3, name: \"Mary\" },\r\n        { id: 4, name: \"Ian\" },\r\n        { id: 5, name: \"Alice\" }\r\n    ],\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: state.messages[state.messages.length - 1].id + 1,\r\n                message: `message${state.messages[state.messages.length - 1].id + 1}`,\r\n                from: action.executor\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (executor) => ({ type: ADD_MESSAGE, executor: executor });\r\n\r\nexport default messageReducer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = `/dialogs/id${props.id}`\r\n    return (\r\n        <div>\r\n            <NavLink to={path} activeClassName=\"active\">{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport style from './MessagesItem.module.css';\r\n\r\nconst MessagesItem = (props) => {\r\n    let classNameValue = props.from === \"me\" ? style.MyMessage : style.FriendsMessage;\r\n\r\n    return (\r\n        <div className={classNameValue}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default MessagesItem;","import React from 'react';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport MessagesItem from './MessagesItem/MessagesItem';\r\nimport style from './DialogsPage.module.css';\r\n\r\nconst DialogsPage = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(item => {\r\n        return <DialogsItem name={item.name} id={item.id} />\r\n    });\r\n\r\n    let messagesElement = state.messages.map(item => {\r\n        return <MessagesItem message={item.message} from={item.from} />\r\n    })\r\n\r\n    let addMessage = (executor) => {\r\n        props.addMessage(executor);\r\n    }\r\n    \r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={style.dialogsMessage}>\r\n                <button onClick={ () => addMessage(\"me\") }>Message from me</button>\r\n                <button onClick={ () => addMessage(\"friend\") }>Message from friend</button>\r\n                {messagesElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogsPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuthorized: state.auth.isAuthorized\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuthorized) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let connectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return connectedAuthRedirectComponent;\r\n}","import { addMessageActionCreator } from './../../redux/messageReducer';\r\nimport DialogsPage from './DialogsPage';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (executor) => {\r\n            dispatch(addMessageActionCreator(executor));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(DialogsPage);","import { usersAPI, profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hey!\", likeCount: 15},\r\n        {id: 2, message: \"This is my first project!\", likeCount: 23}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {id: 5, message: action.newPostText, likeCount: 0};\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText });\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const setChosenUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n        .then(data => {\r\n            dispatch(setUserProfile(data));\r\n        });\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data || '/empty status/'));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setStatus(status || '/empty status/'));\r\n            }\r\n        });\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport style from './Post.module.css';\r\nimport avatar from './../../../../Assets/Images/avatar.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={style.avatarSmall}>\r\n                <img src={avatar} alt=\"\" />\r\n                <div>{props.message} ❤{props.likeCount}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    const classForError = hasError ? styles.error : \"\";\r\n    return (\r\n        <div className={ `${styles.formControl} ${classForError}` }>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport Post from './Post/Post';\r\nimport style from './MyPosts.module.css';\r\nimport { required, maxLengthCreator } from './../../../utils/validators/validator';\r\nimport { Textarea } from './../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={style.addPost}>\r\n                <div className={style.caption}>My Posts</div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'your news...'}\r\n                    validate={ [required, maxLength10] } />\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: 'addNewPost' })(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let PostsElements = props.posts.map( item => {\r\n        return <Post message={item.message} likeCount={item.likeCount} />\r\n    })\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n            <div>\r\n                {PostsElements}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from './../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            let action = addPostActionCreator(newPostText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({ status: this.props.status });\r\n        }\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({ editMode: true });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({ editMode: false });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (event) => {\r\n        this.setState({ status: event.currentTarget.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} onBlur={this.deactivateEditMode}\r\n                        autoFocus={true} value={this.state.status} />\r\n                    </div>}\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport avatar from '../../../../Assets/Images/avatar.png';\r\nimport { Preloader } from '../../../common/Preloader/Preloader';\r\nimport { ProfileStatus } from './ProfileStatus';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.avatar}>\r\n                <img src={props.profile.photos.small || avatar} alt=\"\" />\r\n            </div>\r\n            <div>\r\n                <div><b>{props.profile.fullName}</b></div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport style from './ProfilePage.module.css';\r\n\r\nconst ProfilePage = (props) => {\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img className={style.background} src=\"https://funkyimg.com/i/2VBgT.jpg\" alt=\"\" />\r\n            </div> */}\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { setChosenUserProfile, getStatus, updateStatus } from './../../redux/profileReducer';\r\nimport ProfilePage from './ProfilePage';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userID || 1511;\r\n        this.props.setChosenUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <ProfilePage {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setChosenUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img src=\"https://cdn-images-1.medium.com/max/1600/1*VeM-5lsAtrrJ4jXH96h5kg.png\" alt=\"\" />\r\n            <div className={style.loginBlock}>\r\n                {props.isAuthorized\r\n                    ? <span onClick={props.logout}>{props.login}</span>\r\n                    : <NavLink to={'/login'}>Sign in</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { authAPI } from '../api/api';\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuthorized: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.payload}\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuthorized) => {\r\n    return {type: SET_USER_DATA, payload: {userId, email, login, isAuthorized}};\r\n}\r\n\r\nexport const authorizeMe = () => (dispatch) => {\r\n    authAPI.authorizeMe()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let { id, email, login } = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(authorizeMe());\r\n            }\r\n        });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        });\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport { authorizeMe, logout } from './../../redux/authReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.authorizeMe();\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthorized: state.auth.isAuthorized,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    authorizeMe, logout\r\n})(HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport styles from './Login.module.css';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from './../../utils/validators/validator';\r\nimport { login } from './../../redux/authReducer';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Input} name={'email'} placeholder={'E-mail'}\r\n                    validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'password'} placeholder={'Password'} type={'password'}\r\n                    validate={[required]} />\r\n            </div>\r\n            <div className={styles.rememberMe}>\r\n                <Field component={Input} name={'rememberMe'} type={'checkbox'} />\r\n                Remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuthorized) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div className={styles.login}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthorized: state.auth.isAuthorized\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport './App.css';\r\nimport NavContainer from './Components/Navbar/NavContainer';\r\nimport UsersContainer from './Components/Users/UsersContainer';\r\nimport DialogsPageContainer from './Components/Dialogs/DialogsPageContainer';\r\nimport ProfileContainer from './Components/Profile/ProfilePageContainer';\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport Login from './Components/Login/Login';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <HeaderContainer />\r\n            <NavContainer />\r\n            <div className=\"pagesWrapper\">\r\n                <Route path=\"/profile/:userID?\"\r\n                    render={() => <ProfileContainer />} />\r\n                <Route path=\"/dialogs\"\r\n                    render={() => <DialogsPageContainer />} />\r\n                <Route path=\"/users\"\r\n                    render={() => <UsersContainer />} />\r\n                <Route path=\"/login\"\r\n                    render={() => <Login />} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport profileReducer from \"./profileReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport navbarReducer from './navbarReducer';\r\nimport authReducer from \"./authReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: messageReducer,\r\n    usersPage: usersReducer,\r\n    navbar: navbarReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n// HashRouter for github pages only\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/avatar.fc047347.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1e3nW\",\"active\":\"Nav_active__2tEWY\",\"friendsNav\":\"Nav_friendsNav__18cCO\",\"friends\":\"Nav_friends__E7lJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogsPage_dialogs__1zCWH\",\"dialogsItem\":\"DialogsPage_dialogsItem__Xv8W1\",\"active\":\"DialogsPage_active__1PkGb\",\"dialogsMessage\":\"DialogsPage_dialogsMessage__3IDOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyMessage\":\"MessagesItem_MyMessage__gjeo1\",\"FriendsMessage\":\"MessagesItem_FriendsMessage__1K1iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"MyPosts_addPost__2-one\",\"caption\":\"MyPosts_caption__ELyxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1pkYd\",\"error\":\"FormsControls_error__2XDiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__3v65o\",\"profileInfo\":\"ProfileInfo_profileInfo__3fY7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5YG4N\",\"loginBlock\":\"Header_loginBlock__8aGkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__20i0z\",\"rememberMe\":\"Login_rememberMe__2uknt\"};"],"sourceRoot":""}